[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Publishing and browsing R packages",
    "section": "",
    "text": "An open and free marketplace for R packages!\nAn array of services to users and developers of R packages, with integrated measuring and monitoring tools to analyze the state and evolution of the ecosystem.\n\n\n\n Back to top"
  },
  {
    "objectID": "browse/rss-feeds.html",
    "href": "browse/rss-feeds.html",
    "title": "RSS feeds of package updates",
    "section": "",
    "text": "The /feed.xml endpoint on any r-universe domain gives an RSS feed of recent R package updates in the repository:\nhttps://ropensci.r-universe.dev/feed.xml\nhttps://tidyverse.r-universe.dev/feed.xml\nhttps://jeroen.r-universe.dev/feed.xml\nEach feed item contains the name and version of the updated R package, along with a timestamp and a link to the build log of the most recent commit. The feed also contains some additional metadata such as the package description, and a list of the articles (vignettes) contained in the package.\n\n\nExample (https://jeroen.r-universe.dev/feed.xml)\n\n\n \n\njeroen r-universe repository\n\n&lt;link&gt;https://jeroen.r-universe.dev&lt;/link&gt;\n&lt;description&gt;Package updated in jeroen&lt;/description&gt;\n&lt;generator&gt;cranlike-server 0.17.10&lt;/generator&gt;\n&lt;image&gt;\n  &lt;url&gt;https://github.com/jeroen.png?size=400&lt;/url&gt;\n  &lt;title&gt;jeroen r-universe repository&lt;/title&gt;\n  &lt;link&gt;https://jeroen.r-universe.dev&lt;/link&gt;\n&lt;/image&gt;\n&lt;lastBuildDate&gt;Fri, 10 May 2024 21:07:19 GMT&lt;/lastBuildDate&gt;\n&lt;item&gt;\n  &lt;title&gt;[ropensci] gert 2.0.2&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Simple git client for R based on 'libgit2' &lt;https://libgit2.org&gt; with support for SSH and HTTPS remotes. All functions in 'gert' use basic R data types (such as vectors and data-frames) for their arguments and return values. User credentials are shared with command line 'git' through the git-credential store and ssh keys stored on disk or ssh-agent.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/ropensci/actions/runs/9038211214&lt;/link&gt;\n  &lt;pubDate&gt;Fri, 10 May 2024 21:07:19 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;gert&lt;/r:package&gt;\n  &lt;r:version&gt;2.0.2&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://ropensci.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/r-lib/gert&lt;/r:upstream&gt;\n  &lt;r:article&gt;\n    &lt;r:source&gt;gert.Rmd&lt;/r:source&gt;\n    &lt;r:filename&gt;gert.html&lt;/r:filename&gt;\n    &lt;r:title&gt;gert&lt;/r:title&gt;\n    &lt;r:created&gt;2020-05-26 22:26:27&lt;/r:created&gt;\n    &lt;r:modified&gt;2023-08-07 12:18:11&lt;/r:modified&gt;\n  &lt;/r:article&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[ropensci] sodium 1.3.1&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Bindings to 'libsodium' &lt;https://doc.libsodium.org/&gt;: a modern, easy-to-use software library for encryption, decryption, signatures, password hashing and more. Sodium uses curve25519, a state-of-the-art Diffie-Hellman function by Daniel Bernstein, which has become very popular after it was discovered that the NSA had backdoored Dual EC DRBG.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/ropensci/actions/runs/9023711276&lt;/link&gt;\n  &lt;pubDate&gt;Thu, 09 May 2024 20:54:03 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;sodium&lt;/r:package&gt;\n  &lt;r:version&gt;1.3.1&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://ropensci.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/r-lib/sodium&lt;/r:upstream&gt;\n  &lt;r:article&gt;\n    &lt;r:source&gt;crypto101.rmd&lt;/r:source&gt;\n    &lt;r:filename&gt;crypto101.html&lt;/r:filename&gt;\n    &lt;r:title&gt;How does cryptography work&lt;/r:title&gt;\n    &lt;r:created&gt;2015-10-12 22:26:43&lt;/r:created&gt;\n    &lt;r:modified&gt;2023-09-26 13:46:45&lt;/r:modified&gt;\n  &lt;/r:article&gt;\n  &lt;r:article&gt;\n    &lt;r:source&gt;intro.rmd&lt;/r:source&gt;\n    &lt;r:filename&gt;intro.html&lt;/r:filename&gt;\n    &lt;r:title&gt;Introduction to Sodium for R&lt;/r:title&gt;\n    &lt;r:created&gt;2015-10-12 14:18:21&lt;/r:created&gt;\n    &lt;r:modified&gt;2022-06-11 07:42:25&lt;/r:modified&gt;\n  &lt;/r:article&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[jeroen] sys 3.4.2.9000&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Drop-in replacements for the base system2() function with fine control and consistent behavior across platforms. Supports clean interruption, timeout, background tasks, and streaming STDIN / STDOUT / STDERR over binary or text connections. Arguments on Windows automatically get encoded and quoted to work on different locales.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/jeroen/actions/runs/9002702113&lt;/link&gt;\n  &lt;pubDate&gt;Tue, 30 Apr 2024 09:12:38 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;sys&lt;/r:package&gt;\n  &lt;r:version&gt;3.4.2.9000&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://jeroen.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/jeroen/sys&lt;/r:upstream&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[opencpu] opencpu 2.2.12&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;A system for embedded scientific computing and reproducible research with R. The OpenCPU server exposes a simple but powerful HTTP api for RPC and data interchange with R. This provides a reliable and scalable foundation for statistical services or building R web applications. The OpenCPU server runs either as a single-user development server within the interactive R session, or as a multi-user Linux stack based on Apache2. The entire system is fully open source and permissively licensed. The OpenCPU website has detailed documentation and example apps.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/opencpu/actions/runs/8845708017&lt;/link&gt;\n  &lt;pubDate&gt;Fri, 26 Apr 2024 08:38:15 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;opencpu&lt;/r:package&gt;\n  &lt;r:version&gt;2.2.12&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://opencpu.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/opencpu/opencpu&lt;/r:upstream&gt;\n  &lt;r:article&gt;\n    &lt;r:source&gt;opencpu-paper.pdf.asis&lt;/r:source&gt;\n    &lt;r:filename&gt;opencpu-paper.pdf&lt;/r:filename&gt;\n    &lt;r:title&gt;The OpenCPU System: Towards a Universal Interface for Scientific Computing through Separation of Concerns&lt;/r:title&gt;\n    &lt;r:created&gt;2016-03-08 15:37:44&lt;/r:created&gt;\n    &lt;r:modified&gt;2016-03-08 15:37:44&lt;/r:modified&gt;\n  &lt;/r:article&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[ropensci] xslt 1.4.5&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;An extension for the 'xml2' package to transform XML documents by applying an 'xslt' style-sheet.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/ropensci/actions/runs/8882623376&lt;/link&gt;\n  &lt;pubDate&gt;Wed, 24 Apr 2024 15:52:28 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;xslt&lt;/r:package&gt;\n  &lt;r:version&gt;1.4.5&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://ropensci.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/ropensci/xslt&lt;/r:upstream&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[jeroen] mongolite 2.8.0&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;High-performance MongoDB client based on 'mongo-c-driver' and 'jsonlite'. Includes support for aggregation, indexing, map-reduce, streaming, encryption, enterprise authentication, and GridFS. The online user manual provides an overview of the available methods in the package: &lt;https://jeroen.github.io/mongolite/&gt;.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/jeroen/actions/runs/8882159837&lt;/link&gt;\n  &lt;pubDate&gt;Wed, 24 Apr 2024 13:47:16 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;mongolite&lt;/r:package&gt;\n  &lt;r:version&gt;2.8.0&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://jeroen.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/jeroen/mongolite&lt;/r:upstream&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[jeroen] openssl 2.1.2&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Bindings to OpenSSL libssl and libcrypto, plus custom SSH key parsers. Supports RSA, DSA and EC curves P-256, P-384, P-521, and curve25519. Cryptographic signatures can either be created and verified manually or via x509 certificates. AES can be used in cbc, ctr or gcm mode for symmetric encryption; RSA for asymmetric (public key) encryption or EC for Diffie Hellman. High-level envelope functions combine RSA and AES for encrypting arbitrary sized data. Other utilities include key generators, hash functions (md5, sha1, sha256, etc), base64 encoder, a secure random number generator, and 'bignum' math methods for manually performing crypto calculations on large multibyte integers.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/jeroen/actions/runs/8882160159&lt;/link&gt;\n  &lt;pubDate&gt;Sun, 21 Apr 2024 20:06:48 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;openssl&lt;/r:package&gt;\n  &lt;r:version&gt;2.1.2&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://jeroen.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/jeroen/openssl&lt;/r:upstream&gt;\n  &lt;r:article&gt;\n    &lt;r:source&gt;crypto_hashing.Rmd&lt;/r:source&gt;\n    &lt;r:filename&gt;crypto_hashing.html&lt;/r:filename&gt;\n    &lt;r:title&gt;Cryptographic Hashing in R&lt;/r:title&gt;\n    &lt;r:created&gt;2015-01-07 04:08:07&lt;/r:created&gt;\n    &lt;r:modified&gt;2020-09-18 10:30:45&lt;/r:modified&gt;\n  &lt;/r:article&gt;\n  &lt;r:article&gt;\n    &lt;r:source&gt;bignum.Rmd&lt;/r:source&gt;\n    &lt;r:filename&gt;bignum.html&lt;/r:filename&gt;\n    &lt;r:title&gt;Fun with bignum: how RSA encryption works&lt;/r:title&gt;\n    &lt;r:created&gt;2015-11-24 12:00:10&lt;/r:created&gt;\n    &lt;r:modified&gt;2020-06-01 10:12:29&lt;/r:modified&gt;\n  &lt;/r:article&gt;\n  &lt;r:article&gt;\n    &lt;r:source&gt;secure_rng.Rmd&lt;/r:source&gt;\n    &lt;r:filename&gt;secure_rng.html&lt;/r:filename&gt;\n    &lt;r:title&gt;Generating Secure Random Numbers in R&lt;/r:title&gt;\n    &lt;r:created&gt;2015-01-07 04:08:07&lt;/r:created&gt;\n    &lt;r:modified&gt;2020-09-18 10:18:44&lt;/r:modified&gt;\n  &lt;/r:article&gt;\n  &lt;r:article&gt;\n    &lt;r:source&gt;keys.Rmd&lt;/r:source&gt;\n    &lt;r:filename&gt;keys.html&lt;/r:filename&gt;\n    &lt;r:title&gt;Importing and exporting RSA/DSA/EC keys&lt;/r:title&gt;\n    &lt;r:created&gt;2016-05-25 10:42:58&lt;/r:created&gt;\n    &lt;r:modified&gt;2016-10-26 19:55:55&lt;/r:modified&gt;\n  &lt;/r:article&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[jeroen] jsonlite 1.8.9&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;A reasonably fast JSON parser and generator, optimized for statistical data and the web. Offers simple, flexible tools for working with JSON in R, and is particularly powerful for building pipelines and interacting with a web API. The implementation is based on the mapping described in the vignette (Ooms, 2014). In addition to converting JSON data from/to R objects, 'jsonlite' contains functions to stream, validate, and prettify JSON data. The unit tests included with the package verify that all edge cases are encoded and decoded consistently for use with dynamic data in systems and applications.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/jeroen/actions/runs/9002701259&lt;/link&gt;\n  &lt;pubDate&gt;Wed, 17 Apr 2024 11:26:39 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;jsonlite&lt;/r:package&gt;\n  &lt;r:version&gt;1.8.9&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://jeroen.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/jeroen/jsonlite&lt;/r:upstream&gt;\n  &lt;r:article&gt;\n    &lt;r:source&gt;json-mapping.pdf.asis&lt;/r:source&gt;\n    &lt;r:filename&gt;json-mapping.pdf&lt;/r:filename&gt;\n    &lt;r:title&gt;A mapping between JSON data and R objects&lt;/r:title&gt;\n    &lt;r:created&gt;2015-03-25 18:17:37&lt;/r:created&gt;\n    &lt;r:modified&gt;2015-03-25 18:17:37&lt;/r:modified&gt;\n  &lt;/r:article&gt;\n  &lt;r:article&gt;\n    &lt;r:source&gt;json-paging.Rmd&lt;/r:source&gt;\n    &lt;r:filename&gt;json-paging.html&lt;/r:filename&gt;\n    &lt;r:title&gt;Combining pages of JSON data with jsonlite&lt;/r:title&gt;\n    &lt;r:created&gt;2014-07-26 10:21:25&lt;/r:created&gt;\n    &lt;r:modified&gt;2022-01-16 11:12:55&lt;/r:modified&gt;\n  &lt;/r:article&gt;\n  &lt;r:article&gt;\n    &lt;r:source&gt;json-apis.Rmd&lt;/r:source&gt;\n    &lt;r:filename&gt;json-apis.html&lt;/r:filename&gt;\n    &lt;r:title&gt;Fetching JSON data from REST APIs&lt;/r:title&gt;\n    &lt;r:created&gt;2014-07-27 08:43:41&lt;/r:created&gt;\n    &lt;r:modified&gt;2022-01-16 11:09:07&lt;/r:modified&gt;\n  &lt;/r:article&gt;\n  &lt;r:article&gt;\n    &lt;r:source&gt;json-aaquickstart.Rmd&lt;/r:source&gt;\n    &lt;r:filename&gt;json-aaquickstart.html&lt;/r:filename&gt;\n    &lt;r:title&gt;Getting started with JSON and jsonlite&lt;/r:title&gt;\n    &lt;r:created&gt;2014-08-02 13:33:13&lt;/r:created&gt;\n    &lt;r:modified&gt;2016-12-30 12:03:46&lt;/r:modified&gt;\n  &lt;/r:article&gt;\n  &lt;r:article&gt;\n    &lt;r:source&gt;json-opencpu.pdf.asis&lt;/r:source&gt;\n    &lt;r:filename&gt;json-opencpu.pdf&lt;/r:filename&gt;\n    &lt;r:title&gt;Simple JSON RPC with OpenCPU&lt;/r:title&gt;\n    &lt;r:created&gt;2018-12-05 21:31:31&lt;/r:created&gt;\n    &lt;r:modified&gt;2018-12-05 21:39:16&lt;/r:modified&gt;\n  &lt;/r:article&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[ropensci] antiword 1.3.3&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Wraps the 'AntiWord' utility to extract text from Microsoft Word documents. The utility only supports the old 'doc' format, not the new xml based 'docx' format. Use the 'xml2' package to read the latter.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/ropensci/actions/runs/8689135155&lt;/link&gt;\n  &lt;pubDate&gt;Mon, 15 Apr 2024 11:55:21 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;antiword&lt;/r:package&gt;\n  &lt;r:version&gt;1.3.3&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://ropensci.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/ropensci/antiword&lt;/r:upstream&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[ropensci] rzmq 0.9.13&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Interface to the 'ZeroMQ' lightweight messaging kernel (see &lt;https://zeromq.org/&gt; for more information).&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/ropensci/actions/runs/8882620961&lt;/link&gt;\n  &lt;pubDate&gt;Sun, 14 Apr 2024 16:34:58 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;rzmq&lt;/r:package&gt;\n  &lt;r:version&gt;0.9.13&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://ropensci.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/ropensci/rzmq&lt;/r:upstream&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[ropensci] opencv 0.4.9001&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Exposes some of the available 'OpenCV' &lt;https://opencv.org/&gt; algorithms, such as a QR code scanner, and edge, body or face detection. These can either be applied to analyze static images, or to filter live video footage from a camera device.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/ropensci/actions/runs/8882877556&lt;/link&gt;\n  &lt;pubDate&gt;Wed, 20 Mar 2024 14:55:45 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;opencv&lt;/r:package&gt;\n  &lt;r:version&gt;0.4.9001&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://ropensci.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/ropensci/opencv&lt;/r:upstream&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[ropensci] qpdf 1.3.3&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Content-preserving transformations transformations of PDF files such as split, combine, and compress. This package interfaces directly to the 'qpdf' C++ API and does not require any command line utilities. Note that 'qpdf' does not read actual content from PDF files: to extract text and data you need the 'pdftools' package.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/ropensci/actions/runs/8882148384&lt;/link&gt;\n  &lt;pubDate&gt;Tue, 19 Mar 2024 13:44:53 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;qpdf&lt;/r:package&gt;\n  &lt;r:version&gt;1.3.3&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://ropensci.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/ropensci/qpdf&lt;/r:upstream&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[ropensci] magick 2.8.3&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Bindings to 'ImageMagick': the most comprehensive open-source image processing library available. Supports many common formats (png, jpeg, tiff, pdf, etc) and manipulations (rotate, scale, crop, trim, flip, blur, etc). All operations are vectorized via the Magick++ STL meaning they operate either on a single frame or a series of frames for working with layers, collages, or animation. In RStudio images are automatically previewed when printed to the console, resulting in an interactive editing environment. The latest version of the package includes a native graphics device for creating in-memory graphics or drawing onto images using pixel coordinates.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/ropensci/actions/runs/8882877613&lt;/link&gt;\n  &lt;pubDate&gt;Fri, 08 Mar 2024 09:55:01 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;magick&lt;/r:package&gt;\n  &lt;r:version&gt;2.8.3&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://ropensci.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/ropensci/magick&lt;/r:upstream&gt;\n  &lt;r:article&gt;\n    &lt;r:source&gt;intro.Rmd&lt;/r:source&gt;\n    &lt;r:filename&gt;intro.html&lt;/r:filename&gt;\n    &lt;r:title&gt;The magick package: Advanced Image-Processing in R&lt;/r:title&gt;\n    &lt;r:created&gt;2016-08-23 22:05:16&lt;/r:created&gt;\n    &lt;r:modified&gt;2024-03-08 09:55:01&lt;/r:modified&gt;\n  &lt;/r:article&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[ropensci] spelling 2.3.0&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Spell checking common document formats including latex, markdown, manual pages, and description files. Includes utilities to automate checking of documentation and vignettes as a unit test during 'R CMD check'. Both British and American English are supported out of the box and other languages can be added. In addition, packages may define a 'wordlist' to allow custom terminology without having to abuse punctuation.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/ropensci/actions/runs/8935404617&lt;/link&gt;\n  &lt;pubDate&gt;Mon, 04 Mar 2024 18:03:06 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;spelling&lt;/r:package&gt;\n  &lt;r:version&gt;2.3.0&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://ropensci.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/ropensci/spelling&lt;/r:upstream&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[ropensci] av 0.9.0&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Bindings to 'FFmpeg' &lt;http://www.ffmpeg.org/&gt; AV library for working with audio and video in R. Generates high quality video from images or R graphics with custom audio. Also offers high performance tools for reading raw audio, creating 'spectrograms', and converting between countless audio / video formats. This package interfaces directly to the C API and does not require any command line utilities.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/ropensci/actions/runs/8882134847&lt;/link&gt;\n  &lt;pubDate&gt;Sun, 03 Mar 2024 00:04:02 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;av&lt;/r:package&gt;\n  &lt;r:version&gt;0.9.0&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://ropensci.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/ropensci/av&lt;/r:upstream&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[jeroen] maketools 1.3.0&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Helper functions that interface with the system utilities to learn about the local build environment. Lets you explore 'make' rules to test the local configuration, or query 'pkg-config' to find compiler flags and libs needed for building packages with external dependencies. Also contains tools to analyze which libraries that a installed R package linked to by inspecting output from 'ldd' in combination with information from your distribution package manager, e.g. 'rpm' or 'dpkg'.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/jeroen/actions/runs/8432253614&lt;/link&gt;\n  &lt;pubDate&gt;Sun, 25 Feb 2024 21:51:45 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;maketools&lt;/r:package&gt;\n  &lt;r:version&gt;1.3.0&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://jeroen.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/jeroen/maketools&lt;/r:upstream&gt;\n  &lt;r:article&gt;\n    &lt;r:source&gt;sysdeps.Rmd&lt;/r:source&gt;\n    &lt;r:filename&gt;sysdeps.html&lt;/r:filename&gt;\n    &lt;r:title&gt;Automatically determine run-time dependencies for R packages on Linux&lt;/r:title&gt;\n    &lt;r:created&gt;2020-09-12 12:53:09&lt;/r:created&gt;\n    &lt;r:modified&gt;2020-09-16 22:01:37&lt;/r:modified&gt;\n  &lt;/r:article&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[jeroen] unix 1.5.7&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Bindings to system utilities found in most Unix systems such as POSIX functions which are not part of the Standard C Library.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/jeroen/actions/runs/8882127006&lt;/link&gt;\n  &lt;pubDate&gt;Thu, 22 Feb 2024 12:46:30 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;unix&lt;/r:package&gt;\n  &lt;r:version&gt;1.5.7&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://jeroen.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/jeroen/unix&lt;/r:upstream&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[jeroen] curl 5.2.1&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;The curl() and curl_download() functions provide highly configurable drop-in replacements for base url() and download.file() with better performance, support for encryption (https, ftps), gzip compression, authentication, and other 'libcurl' goodies. The core of the package implements a framework for performing fully customized requests where data can be processed either in memory, on disk, or streaming via the callback or connection interfaces. Some knowledge of 'libcurl' is recommended; for a more-user-friendly web client see the 'httr' package which builds on this package with http specific tools and logic.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/jeroen/actions/runs/9002810855&lt;/link&gt;\n  &lt;pubDate&gt;Tue, 20 Feb 2024 15:04:17 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;curl&lt;/r:package&gt;\n  &lt;r:version&gt;5.2.1&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://jeroen.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/jeroen/curl&lt;/r:upstream&gt;\n  &lt;r:article&gt;\n    &lt;r:source&gt;windows.Rmd&lt;/r:source&gt;\n    &lt;r:filename&gt;windows.html&lt;/r:filename&gt;\n    &lt;r:title&gt;Proxies and Certificates on Windows Networks&lt;/r:title&gt;\n    &lt;r:created&gt;2019-08-28 13:27:44&lt;/r:created&gt;\n    &lt;r:modified&gt;2023-01-12 09:55:18&lt;/r:modified&gt;\n  &lt;/r:article&gt;\n  &lt;r:article&gt;\n    &lt;r:source&gt;intro.Rmd&lt;/r:source&gt;\n    &lt;r:filename&gt;intro.html&lt;/r:filename&gt;\n    &lt;r:title&gt;The curl package: a modern R interface to libcurl&lt;/r:title&gt;\n    &lt;r:created&gt;2015-02-28 22:25:46&lt;/r:created&gt;\n    &lt;r:modified&gt;2024-01-28 16:16:07&lt;/r:modified&gt;\n  &lt;/r:article&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[ropensci] fluidsynth 1.0.0&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Bindings to 'libfluidsynth' to parse and synthesize MIDI files. It can read MIDI into a data frame, play it on the local audio device, or convert into an audio file.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/ropensci/actions/runs/8882150478&lt;/link&gt;\n  &lt;pubDate&gt;Tue, 20 Feb 2024 13:55:17 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;fluidsynth&lt;/r:package&gt;\n  &lt;r:version&gt;1.0.0&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://ropensci.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/ropensci/fluidsynth&lt;/r:upstream&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[jeroen] V8 4.4.2&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;An R interface to V8 &lt;https://v8.dev&gt;: Google's open source JavaScript and WebAssembly engine. This package can be compiled either with V8 version 6 and up or NodeJS when built as a shared library.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/jeroen/actions/runs/8882156243&lt;/link&gt;\n  &lt;pubDate&gt;Thu, 15 Feb 2024 11:16:50 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;V8&lt;/r:package&gt;\n  &lt;r:version&gt;4.4.2&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://jeroen.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/jeroen/v8&lt;/r:upstream&gt;\n  &lt;r:article&gt;\n    &lt;r:source&gt;v8_intro.Rmd&lt;/r:source&gt;\n    &lt;r:filename&gt;v8_intro.html&lt;/r:filename&gt;\n    &lt;r:title&gt;Introduction to V8 for R&lt;/r:title&gt;\n    &lt;r:created&gt;2015-01-09 04:21:51&lt;/r:created&gt;\n    &lt;r:modified&gt;2023-08-24 14:47:17&lt;/r:modified&gt;\n  &lt;/r:article&gt;\n  &lt;r:article&gt;\n    &lt;r:source&gt;npm.Rmd&lt;/r:source&gt;\n    &lt;r:filename&gt;npm.html&lt;/r:filename&gt;\n    &lt;r:title&gt;Using NPM packages in V8&lt;/r:title&gt;\n    &lt;r:created&gt;2015-01-09 07:47:49&lt;/r:created&gt;\n    &lt;r:modified&gt;2023-01-21 22:06:20&lt;/r:modified&gt;\n  &lt;/r:article&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[r-rust] gifski 1.12.2&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Multi-threaded GIF encoder written in Rust: &lt;https://gif.ski/&gt;. Converts images to GIF animations using pngquant's efficient cross-frame palettes and temporal dithering with thousands of colors per frame.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/r-rust/actions/runs/9059071364&lt;/link&gt;\n  &lt;pubDate&gt;Sat, 10 Feb 2024 19:46:14 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;gifski&lt;/r:package&gt;\n  &lt;r:version&gt;1.12.2&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://r-rust.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/r-rust/gifski&lt;/r:upstream&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[ropensci] writexl 1.5.0&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Zero-dependency data frame to xlsx exporter based on 'libxlsxwriter' &lt;https://libxlsxwriter.github.io&gt;. Fast and no Java or Excel required.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/ropensci/actions/runs/9013935255&lt;/link&gt;\n  &lt;pubDate&gt;Fri, 09 Feb 2024 14:46:08 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;writexl&lt;/r:package&gt;\n  &lt;r:version&gt;1.5.0&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://ropensci.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/ropensci/writexl&lt;/r:upstream&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[ropensci] commonmark 1.9.1&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;The CommonMark specification defines a rationalized version of markdown syntax. This package uses the 'cmark' reference implementation for converting markdown text into various formats including html, latex and groff man. In addition it exposes the markdown parse tree in xml format. Also includes opt-in support for GFM extensions including tables, autolinks, and strikethrough text.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/ropensci/actions/runs/8489076534&lt;/link&gt;\n  &lt;pubDate&gt;Tue, 30 Jan 2024 11:29:46 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;commonmark&lt;/r:package&gt;\n  &lt;r:version&gt;1.9.1&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://ropensci.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/r-lib/commonmark&lt;/r:upstream&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[ropensci] unrtf 1.4.5&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Wraps the 'unrtf' utility &lt;https://www.gnu.org/software/unrtf/&gt; to extract text from RTF files. Supports document conversion to HTML, LaTeX or plain text. Output in HTML is recommended because 'unrtf' has limited support for converting between character encodings.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/ropensci/actions/runs/8322460807&lt;/link&gt;\n  &lt;pubDate&gt;Thu, 18 Jan 2024 20:24:28 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;unrtf&lt;/r:package&gt;\n  &lt;r:version&gt;1.4.5&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://ropensci.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/ropensci/unrtf&lt;/r:upstream&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[ropensci] postdoc 1.2.3&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Generates simple and beautiful one-page HTML reference manuals with package documentation. Math rendering and syntax highlighting are done server-side in R such that no JavaScript libraries are needed in the browser, which makes the documentation portable and fast to load.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/ropensci/actions/runs/8339087415&lt;/link&gt;\n  &lt;pubDate&gt;Wed, 17 Jan 2024 12:08:58 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;postdoc&lt;/r:package&gt;\n  &lt;r:version&gt;1.2.3&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://ropensci.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/ropensci/postdoc&lt;/r:upstream&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[jeroen] gpg 1.2.9&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Bindings to GnuPG for working with OpenGPG (RFC4880) cryptographic methods. Includes utilities for public key encryption, creating and verifying digital signatures, and managing your local keyring. Some functionality depends on the version of GnuPG that is installed on the system. On Windows this package can be used together with 'GPG4Win' which provides a GUI for managing keys and entering passphrases.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/jeroen/actions/runs/8882144665&lt;/link&gt;\n  &lt;pubDate&gt;Fri, 29 Dec 2023 13:28:29 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;gpg&lt;/r:package&gt;\n  &lt;r:version&gt;1.2.9&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://jeroen.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/jeroen/gpg&lt;/r:upstream&gt;\n  &lt;r:article&gt;\n    &lt;r:source&gt;intro.Rmd&lt;/r:source&gt;\n    &lt;r:filename&gt;intro.html&lt;/r:filename&gt;\n    &lt;r:title&gt;Encryption and Digital Signatures in R using GPG&lt;/r:title&gt;\n    &lt;r:created&gt;2016-10-06 21:12:26&lt;/r:created&gt;\n    &lt;r:modified&gt;2022-10-13 08:14:57&lt;/r:modified&gt;\n  &lt;/r:article&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[jeroen] protolite 2.3.0&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Pure C++ implementations for reading and writing several common data formats based on Google protocol-buffers. Currently supports 'rexp.proto' for serialized R objects, 'geobuf.proto' for binary geojson, and 'mvt.proto' for vector tiles. This package uses the auto-generated C++ code by protobuf-compiler, hence the entire serialization is optimized at compile time. The 'RProtoBuf' package on the other hand uses the protobuf runtime library to provide a general- purpose toolkit for reading and writing arbitrary protocol-buffer data in R.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/jeroen/actions/runs/8882162182&lt;/link&gt;\n  &lt;pubDate&gt;Fri, 29 Dec 2023 13:23:42 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;protolite&lt;/r:package&gt;\n  &lt;r:version&gt;2.3.0&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://jeroen.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/jeroen/protolite&lt;/r:upstream&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[jeroen] RAppArmor 3.2.4&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Bindings to kernel methods for enforcing security restrictions. AppArmor can apply mandatory access control (MAC) policies on a given task (process) via security profiles with detailed ACL definitions. In addition this package implements bindings for setting process resource limits (rlimit), uid, gid, affinity and priority. The high level R function 'eval.secure' builds on these methods to perform dynamic sandboxing: it evaluates a single R expression within a temporary fork which acts as a sandbox by enforcing fine grained restrictions without affecting the main R process. A portable version of this function is now available in the 'unix' package.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/jeroen/actions/runs/8882126947&lt;/link&gt;\n  &lt;pubDate&gt;Mon, 04 Dec 2023 19:19:33 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;RAppArmor&lt;/r:package&gt;\n  &lt;r:version&gt;3.2.4&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://jeroen.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/jeroen/rapparmor&lt;/r:upstream&gt;\n  &lt;r:article&gt;\n    &lt;r:source&gt;v55i07.pdf.asis&lt;/r:source&gt;\n    &lt;r:filename&gt;v55i07.pdf&lt;/r:filename&gt;\n    &lt;r:title&gt;Enforcing Security Policies Using Dynamic Sandboxing on Linux&lt;/r:title&gt;\n    &lt;r:created&gt;2016-03-08 12:21:09&lt;/r:created&gt;\n    &lt;r:modified&gt;2016-03-08 12:23:48&lt;/r:modified&gt;\n  &lt;/r:article&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[r-dbi] RMySQL 0.10.27&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Legacy 'DBI' interface to 'MySQL' / 'MariaDB' based on old code ported from S-PLUS. A modern 'MySQL' client written in 'C++' is available from the 'RMariaDB' package.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/r-dbi/actions/runs/8882155372&lt;/link&gt;\n  &lt;pubDate&gt;Mon, 04 Dec 2023 13:04:46 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;RMySQL&lt;/r:package&gt;\n  &lt;r:version&gt;0.10.27&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://r-dbi.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/r-dbi/rmysql&lt;/r:upstream&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[ropensci] jqr 1.3.3&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Client for 'jq', a 'JSON' processor (&lt;https://jqlang.github.io/jq/&gt;), written in C. 'jq' allows the following with 'JSON' data: index into, parse, do calculations, cut up and filter, change key names and values, perform conditionals and comparisons, and more.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/ropensci/actions/runs/8882146814&lt;/link&gt;\n  &lt;pubDate&gt;Mon, 04 Dec 2023 12:27:48 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;jqr&lt;/r:package&gt;\n  &lt;r:version&gt;1.3.3&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://ropensci.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/ropensci/jqr&lt;/r:upstream&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[jeroen] webutils 1.2.0&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Parses http request data in application/json, multipart/form-data, or application/x-www-form-urlencoded format. Includes example of hosting and parsing html form data in R using either 'httpuv' or 'Rhttpd'.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/jeroen/actions/runs/8416476599&lt;/link&gt;\n  &lt;pubDate&gt;Fri, 24 Nov 2023 11:31:28 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;webutils&lt;/r:package&gt;\n  &lt;r:version&gt;1.2.0&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://jeroen.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/jeroen/webutils&lt;/r:upstream&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[ropensci] cld3 1.6.0&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Google's Compact Language Detector 3 is a neural network model for language identification and the successor of 'cld2' (available from CRAN). The algorithm is still experimental and takes a novel approach to language detection with different properties and outcomes. It can be useful to combine this with the Bayesian classifier results from 'cld2'. See &lt;https://github.com/google/cld3#readme&gt; for more information.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/ropensci/actions/runs/8882878525&lt;/link&gt;\n  &lt;pubDate&gt;Mon, 20 Nov 2023 15:04:14 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;cld3&lt;/r:package&gt;\n  &lt;r:version&gt;1.6.0&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://ropensci.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/ropensci/cld3&lt;/r:upstream&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[ropensci] tesseract 5.2.1&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Bindings to 'Tesseract': a powerful optical character recognition (OCR) engine that supports over 100 languages. The engine is highly configurable in order to tune the detection algorithms and obtain the best possible results.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/ropensci/actions/runs/8882878464&lt;/link&gt;\n  &lt;pubDate&gt;Mon, 20 Nov 2023 14:44:32 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;tesseract&lt;/r:package&gt;\n  &lt;r:version&gt;5.2.1&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://ropensci.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/ropensci/tesseract&lt;/r:upstream&gt;\n  &lt;r:article&gt;\n    &lt;r:source&gt;intro.Rmd&lt;/r:source&gt;\n    &lt;r:filename&gt;intro.html&lt;/r:filename&gt;\n    &lt;r:title&gt;Using the Tesseract OCR engine in R&lt;/r:title&gt;\n    &lt;r:created&gt;2018-02-23 22:16:20&lt;/r:created&gt;\n    &lt;r:modified&gt;2023-11-20 14:44:32&lt;/r:modified&gt;\n  &lt;/r:article&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[ropensci] hunspell 3.0.3&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Low level spell checker and morphological analyzer based on the famous 'hunspell' library &lt;https://hunspell.github.io&gt;. The package can analyze or check individual words as well as parse text, latex, html or xml documents. For a more user-friendly interface use the 'spelling' package which builds on this package to automate checking of files, documentation and vignettes in all common formats.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/ropensci/actions/runs/8997752765&lt;/link&gt;\n  &lt;pubDate&gt;Fri, 27 Oct 2023 10:48:36 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;hunspell&lt;/r:package&gt;\n  &lt;r:version&gt;3.0.3&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://ropensci.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/ropensci/hunspell&lt;/r:upstream&gt;\n  &lt;r:article&gt;\n    &lt;r:source&gt;intro.Rmd&lt;/r:source&gt;\n    &lt;r:filename&gt;intro.html&lt;/r:filename&gt;\n    &lt;r:title&gt;The hunspell package: High-Performance Stemmer, Tokenizer, and Spell Checker for R&lt;/r:title&gt;\n    &lt;r:created&gt;2016-09-07 19:01:21&lt;/r:created&gt;\n    &lt;r:modified&gt;2023-10-05 18:39:21&lt;/r:modified&gt;\n  &lt;/r:article&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[ropensci] ssh 0.9.1&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Connect to a remote server over SSH to transfer files via SCP, setup a secure tunnel, or run a command or script on the host while streaming stdout and stderr directly to the client.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/ropensci/actions/runs/8882151048&lt;/link&gt;\n  &lt;pubDate&gt;Mon, 16 Oct 2023 18:37:10 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;ssh&lt;/r:package&gt;\n  &lt;r:version&gt;0.9.1&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://ropensci.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/ropensci/ssh&lt;/r:upstream&gt;\n  &lt;r:article&gt;\n    &lt;r:source&gt;intro.Rmd&lt;/r:source&gt;\n    &lt;r:filename&gt;intro.html&lt;/r:filename&gt;\n    &lt;r:title&gt;Secure Shell (SSH) Client for R&lt;/r:title&gt;\n    &lt;r:created&gt;2018-02-18 12:58:37&lt;/r:created&gt;\n    &lt;r:modified&gt;2023-10-16 18:37:10&lt;/r:modified&gt;\n  &lt;/r:article&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[r-rust] hellorust 1.2.0&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Template R package with minimal setup to use Rust code in R without hacks or frameworks. Includes basic examples of importing cargo dependencies, spawning threads and passing numbers or strings from Rust to R. Cargo crates are automatically 'vendored' in the R source package to support offline installation. The GitHub repository for this package has more details and also explains how to set up CI. This project was first presented at 'Erum2018' to showcase R-Rust integration &lt;https://jeroen.github.io/erum2018/&gt;; for a real world use-case, see the 'gifski' package on 'CRAN'.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/r-rust/actions/runs/8935561886&lt;/link&gt;\n  &lt;pubDate&gt;Wed, 11 Oct 2023 13:01:25 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;hellorust&lt;/r:package&gt;\n  &lt;r:version&gt;1.2.0&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://r-rust.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/r-rust/hellorust&lt;/r:upstream&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[ropensci] pdftools 3.4.0&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Utilities based on 'libpoppler' for extracting text, fonts, attachments and metadata from a PDF file. Also supports high quality rendering of PDF documents into PNG, JPEG, TIFF format, or into raw bitmap vectors for further processing in R.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/ropensci/actions/runs/8882878074&lt;/link&gt;\n  &lt;pubDate&gt;Mon, 09 Oct 2023 08:57:23 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;pdftools&lt;/r:package&gt;\n  &lt;r:version&gt;3.4.0&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://ropensci.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/ropensci/pdftools&lt;/r:upstream&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[ropensci] rsvg 2.6.0&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Renders vector-based svg images into high-quality custom-size bitmap arrays using 'librsvg2'. The resulting bitmap can be written to e.g. png, jpeg or webp format. In addition, the package can convert images directly to various formats such as pdf or postscript.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/ropensci/actions/runs/8882142304&lt;/link&gt;\n  &lt;pubDate&gt;Fri, 06 Oct 2023 20:00:05 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;rsvg&lt;/r:package&gt;\n  &lt;r:version&gt;2.6.0&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://ropensci.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/ropensci/rsvg&lt;/r:upstream&gt;\n  &lt;r:article&gt;\n    &lt;r:source&gt;svg-css.Rmd&lt;/r:source&gt;\n    &lt;r:filename&gt;svg-css.html&lt;/r:filename&gt;\n    &lt;r:title&gt;Rendering SVG with CSS in R&lt;/r:title&gt;\n    &lt;r:created&gt;2020-05-19 14:02:05&lt;/r:created&gt;\n    &lt;r:modified&gt;2022-02-06 14:03:25&lt;/r:modified&gt;\n  &lt;/r:article&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[jeroen] webp 1.2.0&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Lossless webp images are 26% smaller in size compared to PNG. Lossy webp images are 25-34% smaller in size compared to JPEG. This package reads and writes webp images into a 3 (rgb) or 4 (rgba) channel bitmap array using conventions from the 'jpeg' and 'png' packages.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/jeroen/actions/runs/8882152000&lt;/link&gt;\n  &lt;pubDate&gt;Tue, 26 Sep 2023 10:05:14 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;webp&lt;/r:package&gt;\n  &lt;r:version&gt;1.2.0&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://jeroen.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/jeroen/webp&lt;/r:upstream&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[ropensci] credentials 2.0.1&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Setup and retrieve HTTPS and SSH credentials for use with 'git' and other services. For HTTPS remotes the package interfaces the 'git-credential' utility which 'git' uses to store HTTP usernames and passwords. For SSH remotes we provide convenient functions to find or generate appropriate SSH keys. The package both helps the user to setup a local git installation, and also provides a back-end for git/ssh client libraries to authenticate with existing user credentials.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/ropensci/actions/runs/8934501340&lt;/link&gt;\n  &lt;pubDate&gt;Wed, 06 Sep 2023 13:52:03 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;credentials&lt;/r:package&gt;\n  &lt;r:version&gt;2.0.1&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://ropensci.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/r-lib/credentials&lt;/r:upstream&gt;\n  &lt;r:article&gt;\n    &lt;r:source&gt;intro.Rmd&lt;/r:source&gt;\n    &lt;r:filename&gt;intro.html&lt;/r:filename&gt;\n    &lt;r:title&gt;Managing SSH and Git Credentials in R&lt;/r:title&gt;\n    &lt;r:created&gt;2018-11-07 20:59:38&lt;/r:created&gt;\n    &lt;r:modified&gt;2023-09-06 11:25:15&lt;/r:modified&gt;\n  &lt;/r:article&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[r-lib] askpass 1.2.0&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Cross-platform utilities for prompting the user for credentials or a passphrase, for example to authenticate with a server or read a protected key. Includes native programs for MacOS and Windows, hence no 'tcltk' is required. Password entry can be invoked in two different ways: directly from R via the askpass() function, or indirectly as password-entry back-end for 'ssh-agent' or 'git-credential' via the SSH_ASKPASS and GIT_ASKPASS environment variables. Thereby the user can be prompted for credentials or a passphrase if needed when R calls out to git or ssh.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/r-lib/actions/runs/8997753333&lt;/link&gt;\n  &lt;pubDate&gt;Sun, 03 Sep 2023 17:44:05 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;askpass&lt;/r:package&gt;\n  &lt;r:version&gt;1.2.0&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://r-lib.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/r-lib/askpass&lt;/r:upstream&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[jeroen] badgen 1.0.0&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Bindings to 'badgen' &lt;https://www.npmjs.com/package/badgen&gt; to generate beautiful 'svg' badges in R without internet access. Images can be converted to 'png' using the 'rsvg' package as shown in examples.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/jeroen/actions/runs/9059071418&lt;/link&gt;\n  &lt;pubDate&gt;Mon, 17 Jul 2023 22:45:21 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;badgen&lt;/r:package&gt;\n  &lt;r:version&gt;1.0.0&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://jeroen.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/jeroen/badgen&lt;/r:upstream&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[r-lib] ghapps 1.0.0&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;'GitHub' apps provide a powerful way to manage fine grained programmatic access to specific 'git' repositories, without having to create dummy users, and which are safer than a personal access token for automated tasks. This package extends the 'gh' package to let you authenticate and interact with 'GitHub' &lt;https://docs.github.com/en/rest/overview&gt; in 'R' as an app.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/r-lib/actions/runs/8370227173&lt;/link&gt;\n  &lt;pubDate&gt;Wed, 24 May 2023 09:25:20 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;ghapps&lt;/r:package&gt;\n  &lt;r:version&gt;1.0.0&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://r-lib.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/r-lib/ghapps&lt;/r:upstream&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[ropensci] universe 1.0.0&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Utilities to interact with the R-universe platform. Includes functions to manage local package repositories, as well as API wrappers for retrieving data and metadata about packages in r-universe.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/ropensci/actions/runs/8955962176&lt;/link&gt;\n  &lt;pubDate&gt;Fri, 10 Feb 2023 14:17:27 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;universe&lt;/r:package&gt;\n  &lt;r:version&gt;1.0.0&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://ropensci.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/ropensci/universe&lt;/r:upstream&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[ropensci] prismjs 1.1.0&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Prism &lt;https://prismjs.com/&gt; is a lightweight, extensible syntax highlighter, built with modern web standards in mind. This package provides server-side rendering in R using 'V8' such that no JavaScript library is required in the resulting HTML documents. Over 400 languages are supported.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/ropensci/actions/runs/8488626452&lt;/link&gt;\n  &lt;pubDate&gt;Fri, 02 Dec 2022 12:04:06 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;prismjs&lt;/r:package&gt;\n  &lt;r:version&gt;1.1.0&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://ropensci.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/ropensci/prismjs&lt;/r:upstream&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[ropensci] katex 1.4.1&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Convert latex math expressions to HTML and 'MathML' for use in markdown documents or package manual pages. The rendering is done in R using the V8 engine (i.e. server-side), which eliminates the need for embedding the 'MathJax' library into your web pages. In addition a 'math-to-rd' wrapper is provided to automatically render beautiful math in R documentation files.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/ropensci/actions/runs/8488626461&lt;/link&gt;\n  &lt;pubDate&gt;Mon, 28 Nov 2022 13:14:15 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;katex&lt;/r:package&gt;\n  &lt;r:version&gt;1.4.1&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://ropensci.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/ropensci/katex&lt;/r:upstream&gt;\n  &lt;r:article&gt;\n    &lt;r:source&gt;katex-tests.Rmd&lt;/r:source&gt;\n    &lt;r:filename&gt;katex-tests.html&lt;/r:filename&gt;\n    &lt;r:title&gt;Rending math to HTML in R using katex&lt;/r:title&gt;\n    &lt;r:created&gt;2021-07-13 19:46:03&lt;/r:created&gt;\n    &lt;r:modified&gt;2022-02-08 20:37:55&lt;/r:modified&gt;\n  &lt;/r:article&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[ropensci] cld2 1.2.4&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Bindings to Google's C++ library Compact Language Detector 2 (see &lt;https://github.com/cld2owners/cld2#readme&gt; for more information). Probabilistically detects over 80 languages in plain text or HTML. For mixed-language input it returns the top three detected languages and their approximate proportion of the total classified text bytes (e.g. 80% English and 20% French out of 1000 bytes). There is also a 'cld3' package on CRAN which uses a neural network model instead.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/ropensci/actions/runs/8997589849&lt;/link&gt;\n  &lt;pubDate&gt;Wed, 26 Oct 2022 15:47:58 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;cld2&lt;/r:package&gt;\n  &lt;r:version&gt;1.2.4&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://ropensci.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/ropensci/cld2&lt;/r:upstream&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[jeroen] brotli 1.3.0&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;A lossless compressed data format that uses a combination of the LZ77 algorithm and Huffman coding. Brotli is similar in speed to deflate (gzip) but offers more dense compression.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/jeroen/actions/runs/8997753554&lt;/link&gt;\n  &lt;pubDate&gt;Thu, 13 Oct 2022 08:57:30 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;brotli&lt;/r:package&gt;\n  &lt;r:version&gt;1.3.0&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://jeroen.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/jeroen/brotli&lt;/r:upstream&gt;\n  &lt;r:article&gt;\n    &lt;r:source&gt;brotli-2015-09-22.pdf.asis&lt;/r:source&gt;\n    &lt;r:filename&gt;brotli-2015-09-22.pdf&lt;/r:filename&gt;\n    &lt;r:title&gt;Comparison of Brotli, Deflate, Zopfli, LZMA, LZHAM and Bzip2 Compression Algorithms&lt;/r:title&gt;\n    &lt;r:created&gt;2015-10-01 12:50:25&lt;/r:created&gt;\n    &lt;r:modified&gt;2015-10-02 21:34:42&lt;/r:modified&gt;\n  &lt;/r:article&gt;\n  &lt;r:article&gt;\n    &lt;r:source&gt;benchmarks.Rmd&lt;/r:source&gt;\n    &lt;r:filename&gt;benchmarks.html&lt;/r:filename&gt;\n    &lt;r:title&gt;Text Compression in R: brotli, gzip, xz and bz2&lt;/r:title&gt;\n    &lt;r:created&gt;2015-11-25 18:56:52&lt;/r:created&gt;\n    &lt;r:modified&gt;2018-01-27 19:44:10&lt;/r:modified&gt;\n  &lt;/r:article&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[ropensci] graphql 1.5.1&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Bindings to the 'libgraphqlparser' C++ library. Parses GraphQL syntax and exports the AST in JSON format.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/ropensci/actions/runs/8997446827&lt;/link&gt;\n  &lt;pubDate&gt;Sun, 25 Sep 2022 21:52:51 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;graphql&lt;/r:package&gt;\n  &lt;r:version&gt;1.5.1&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://ropensci.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/ropensci/graphql&lt;/r:upstream&gt;\n&lt;/item&gt;\n&lt;item&gt;\n  &lt;title&gt;[jeroen] base64 2.0.1&lt;/title&gt;\n  &lt;author&gt;jeroen@berkeley.edu (Jeroen Ooms)&lt;/author&gt;\n  &lt;description&gt;Compatibility wrapper to replace the orphaned package. New applications should use base64 encoders from 'jsonlite' or 'openssl' or 'base64enc'.&lt;/description&gt;\n  &lt;link&gt;https://github.com/r-universe/jeroen/actions/runs/8496016905&lt;/link&gt;\n  &lt;pubDate&gt;Fri, 19 Aug 2022 09:13:35 GMT&lt;/pubDate&gt;\n  &lt;r:package&gt;base64&lt;/r:package&gt;\n  &lt;r:version&gt;2.0.1&lt;/r:version&gt;\n  &lt;r:status&gt;success&lt;/r:status&gt;\n  &lt;r:repository&gt;https://jeroen.r-universe.dev&lt;/r:repository&gt;\n  &lt;r:upstream&gt;https://github.com/jeroen/base64&lt;/r:upstream&gt;\n&lt;/item&gt;\n \n\nThe dashboard for any universe also includes a link to this same URL, such that users can easily find and subscribe to your feed.\n\n\n\n Back to top",
    "crumbs": [
      "RSS feeds of package updates"
    ]
  },
  {
    "objectID": "browse/universes.html",
    "href": "browse/universes.html",
    "title": "Browsing work from a maintainer or organization",
    "section": "",
    "text": "Each user and organization in r-universe has a unique subdomain under r-universe.dev with a package repository from where packages can directly be installed. For example, the packages and information from rOpenSci can be found on https://ropensci.r-universe.dev, and packages maintained by me are listed at https://jeroen.r-universe.dev (note how these two sets overlap).\nThe top tabs allow you to explore different resources within universe. The builds tab shows the current state of the repository: a table with the name and version of each package, including the commit date, author, and build status. Clicking on the package name in the table sends you to the homepage of the package (more on this below), and the maintainer name links to the subdomain of that maintainer, listing other projects maintained by this person.\nThe packages tab lists descriptive information from all packages in the repository, and the articles tab shows all documents (e.g. vignettes). The contributors tab shows a chart with contributor statistics for the organization or maintainer. Clicking on the a bar in the chart sends you to this other universe where you can explore more work by this person.\nThe same subdomain hosts the actual cran-like package repository for this user or organization. Hence in order to list or install packages from rOpenSci in R, you would use:\n# List available packages\navailable.packages(repos = \"https://ropensci.r-universe.dev\")\n\n# Install a package\ninstall.packages(\"magick\", repos = \"https://ropensci.r-universe.dev\")\n\n\n\n Back to top",
    "crumbs": [
      "Browsing work from a maintainer or organization"
    ]
  },
  {
    "objectID": "browse/get-started.html",
    "href": "browse/get-started.html",
    "title": "A catalogue of R packages",
    "section": "",
    "text": "R-universe can be your entry point to many R packages. R-universe is a collection of universes, each of them featuring the packages of a team or individual.\nYou can search packages, and assess them thanks to all the information provided on universe and package pages. Find out more about the three levels of navigation in R-universe:\n\nsearching the entire R ecosystem\nbrowsing work from a maintainer or organization\nindividual package information\n\n\n\n\n\n\n\nCaution\n\n\n\nR-universe does not vet packages: it is an open publishing system. The system builds and deploys R packages from Git repositories into installation repositories. The owner of the universe is responsible for their own policies and quality control.\n\n\nWith R-universe, you can also follow updates thanks to RSS feeds.\n\n\n\n Back to top",
    "crumbs": [
      "A catalogue of R packages"
    ]
  },
  {
    "objectID": "browse/packages.html",
    "href": "browse/packages.html",
    "title": "Individual package information",
    "section": "",
    "text": "Clicking on a package in search results or in a universe overview will lead you to homepage for that package. You can also link to this page directly via the url https://{owner}.r-universe.dev/{package}.\nThese package pages are generated automatically and provide detailed information about each project, and all the information and resources to quickly install and try the package locally in R.",
    "crumbs": [
      "Individual package information"
    ]
  },
  {
    "objectID": "browse/packages.html#package-information",
    "href": "browse/packages.html#package-information",
    "title": "Individual package information",
    "section": "Package information",
    "text": "Package information\nThe initial section of the homepage shows descriptive data and links to resources from this package, such as source/binary files, the package manual and NEWS file. Further down we show installation instructions to install the package in R. Installation is quick and easy because we provide pre-compiled binaries for Windows and MacOS, so no special tools or setup is required on the user machine.\nHere you can also find more information derived by the build system, such as which system libraries the package builds on, topics, and if the package is on CRAN. The badges underneath show statistics about the package, such as dependencies, reverse dependencies, and GitHub stars. Clicking on the ’exports’ badge will show all functions and datasets exported by the package, which link to the respective sections in the manual page. If specified, we also show how the package should be cited in papers.\n\nHow are the dependencies / dependents calculated?\nBoth are calculated using transitive (recursive) strong dependencies, hence this includes both direct and indirect dependencies. Or in practical terms: other packages that need to be installed at minimum to be able to use the target package.\nAt package build time, we use tools::package_dependencies(pkg, recursive = TRUE) to derive the list of hard dependencies and store this in the database. R-base packages are not included. The dependencies value is simply the size of this list. The dependents value is the opposite: this is the number of packages in R-universe which list the target package as one of its dependencies.",
    "crumbs": [
      "Individual package information"
    ]
  },
  {
    "objectID": "browse/packages.html#all-the-documentation",
    "href": "browse/packages.html#all-the-documentation",
    "title": "Individual package information",
    "section": "All the documentation",
    "text": "All the documentation\nTo let you start using packages as quickly as possible, r-universe renders all available documentation and presents this as clear and concisely as possible on the homepage.\nMost R packages have 3 forms of documentation: a readme file, a reference manual (help pages), and a number of articles (vignettes). These articles are often a good place to get started, and are listed on the package homepage right under the descriptives. From here you can view both the rendered html/pdf document, as well as the rmarkdown source file used to (re)produce the article.\nFurther down the page you can see the content from the package readme. Most packages these days include a README.md file which can nicely be rendered into HTML.\nAfter the readme follows a section named “reference manual” containing a table with all the help pages. These link to the respective chapters in the html reference manual2, which provide the most extensive documentation for each function in the package, including descriptions, parameters, examples, etc. Screenshot of a chapter in the HTML reference manual for a package, showing descriptions, parameters, and examples for a function.\n\ncran.dev shortlinks\nOn r-universe you can find package repositories from many different organizations and maintainers. But sometimes you just want to lookup a particular CRAN package, without knowing the developer. The cran.dev shortlink service lets you navigate or link directly to the r-universe homepage and docs of any established CRAN package.\nThe root domain https://cran.dev/{package} redirects to the primary homepage for a package:\n\nhttps://cran.dev/magick\nhttps://cran.dev/Matrix\nhttps://cran.dev/ggplot2\n\nThe subdomain https://docs.cran.dev/{package} redirects to package manual page:\n\nhttps://docs.cran.dev/targets\nhttps://docs.cran.dev/MASS\nhttps://docs.cran.dev/Rcpp\n\nFinally the subdomain https://api.cran.dev/{package} does not redirect, but returns a JSON blob with links to the package versions and resources. For example:\n\nhttps://api.cran.dev/gert\n\nThis shows the package page and maintainer for the gert package, and information on both the current CRAN release and development versions. Right now it returns:\n{\n  \"package\": \"gert\",\n  \"maintainer\": \"Jeroen Ooms &lt;jeroen@berkeley.edu&gt;\",\n  \"home\": \"https://ropensci.r-universe.dev/gert\",\n  \"release\": {\n    \"version\": \"1.9.2\",\n    \"date\": \"2023-06-30T08:43:26.000Z\",\n    \"source\": \"https://github.com/cran/gert\",\n    \"repository\": \"https://cloud.r-project.org\",\n    \"docs\": \"https://cran.r-universe.dev/gert/doc/manual.html\",\n    \"api\": \"https://cran.r-universe.dev/api/packages/gert\"\n  },\n  \"devel\": {\n    \"version\": \"1.9000\",\n    \"date\": \"2023-07-20T11:08:09.000Z\",\n    \"source\": \"https://github.com/r-lib/gert\",\n    \"repository\": \"https://ropensci.r-universe.dev\",\n    \"docs\": \"https://ropensci.r-universe.dev/gert/doc/manual.html\",\n    \"api\": \"https://ropensci.r-universe.dev/api/packages/gert\"\n  }\n}\nWe can see the release and devel version of this package, with links to the respective sources, cranlike repository, manual, and package metadata.\nFrom the above it can be seen that the gert r-universe page is https://ropensci.r-universe.dev/gert and the r-universe \"repository\" from where to install the devel version of gert:\n# install 'devel' gert\ninstall.packages(\"gert\", repos = \"https://ropensci.r-universe.dev\")\nThe \"api\" field shows the JSON url with all the information and metadata about this package:\n# Everything there is to know about devel gert\ngert &lt;- jsonlite::fromJSON('https://ropensci.r-universe.dev/api/packages/gert')\nNote that not all packages have a devel version available. CRAN packages that are not found GitHub or GitLab or r-forge only have a release version, for example: https://api.cran.dev/MASS",
    "crumbs": [
      "Individual package information"
    ]
  },
  {
    "objectID": "browse/packages.html#usage-and-development-activity",
    "href": "browse/packages.html#usage-and-development-activity",
    "title": "Individual package information",
    "section": "Usage and development activity",
    "text": "Usage and development activity\nBesides familiarizing yourself with what the package does, you may be interested in who is working on it, who else is using it, and if it is still actively developed.\nThe “development and contributors” section shows a bar chart with the number of commits per week for the last year, and who the main contributors are. Finally the section “usage by other packages” shows other packages on r-universe depending on this package, grouped by owner. This gives you some indication on how active the project is, and who are involved. Screenshot of recent development activity and users of a package.",
    "crumbs": [
      "Individual package information"
    ]
  },
  {
    "objectID": "browse/search.html",
    "href": "browse/search.html",
    "title": "Search for packages",
    "section": "",
    "text": "You can search for packages via https://r-universe.dev/search/ using keywords or author names.",
    "crumbs": [
      "Search for packages"
    ]
  },
  {
    "objectID": "browse/search.html#which-packages-get-included-in-search",
    "href": "browse/search.html#which-packages-get-included-in-search",
    "title": "Search for packages",
    "section": "Which packages get included in search?",
    "text": "Which packages get included in search?\nIn r-universe, a given R package can be included in many different registries. To prevent duplicates, search only shows packages from the universes of the upstream github owners of the package, and not from third parties that have added a copy of the package to their registry.\nMore specifically, search results include packages for which:\n\nThe github owner is the same as the universe, for example packages under https://jeroen.r-universe.dev from GitHub user https://github.com/jeroen/. This also includes all CRAN packages.\nAlternatively: to opt-in packages for which the universe name is different from the GitHub owner, the package author must include the full user.r-universe.dev in the URL field of the DESCRIPTION file. For example, if the registry from https://jeroen.r-universe.dev has a package https://github.com/elsewhere/mypkg, but the URL field in the DESCRIPTION includes e.g. https://jeroen.r-universe.dev or https://jeroen.r-universe.dev/mypkg, then it also shows up in the search results.",
    "crumbs": [
      "Search for packages"
    ]
  },
  {
    "objectID": "browse/search.html#how-is-the-package-rank-score-calculated",
    "href": "browse/search.html#how-is-the-package-rank-score-calculated",
    "title": "Search for packages",
    "section": "How is the package-rank score calculated?",
    "text": "How is the package-rank score calculated?\nThe exact algorith is very much WIP and will change. Right now it is a combination of:\n\nNumber of dependents (aka recursive reverse depenencies)\nNumber of Github stars\nNumber of unique contributors\nCommit activity over the last year\n\nThe score is a weighted sum of the above, on a log scale. But we plan to improve the algorithm as the project gets more mature, and better data becomes available.",
    "crumbs": [
      "Search for packages"
    ]
  },
  {
    "objectID": "browse/search.html#why-is-a-package-sometimes-listed-twice",
    "href": "browse/search.html#why-is-a-package-sometimes-listed-twice",
    "title": "Search for packages",
    "section": "Why is a package sometimes listed twice?",
    "text": "Why is a package sometimes listed twice?\nIf a source package fails to build (which means something is very wrong) then you see a red “build failure” message. If there was a previous successful build, it is kept there as well for users to install.",
    "crumbs": [
      "Search for packages"
    ]
  },
  {
    "objectID": "publish/get-started.html",
    "href": "publish/get-started.html",
    "title": "Publish and advertise your packages",
    "section": "",
    "text": "By registering your packages with R-universe, you make your packages easier to find and assess by users.\nCreating your own, or your own organization’s, R-universe creates a showcase of expertise and interests.",
    "crumbs": [
      "Publish and advertise your packages"
    ]
  },
  {
    "objectID": "publish/get-started.html#put-your-packages-and-yourself-on-the-map",
    "href": "publish/get-started.html#put-your-packages-and-yourself-on-the-map",
    "title": "Publish and advertise your packages",
    "section": "",
    "text": "By registering your packages with R-universe, you make your packages easier to find and assess by users.\nCreating your own, or your own organization’s, R-universe creates a showcase of expertise and interests.",
    "crumbs": [
      "Publish and advertise your packages"
    ]
  },
  {
    "objectID": "publish/get-started.html#make-your-packages-easy-to-install",
    "href": "publish/get-started.html#make-your-packages-easy-to-install",
    "title": "Publish and advertise your packages",
    "section": "Make your packages easy to install",
    "text": "Make your packages easy to install\nR-universe build binaries TODO add details",
    "crumbs": [
      "Publish and advertise your packages"
    ]
  },
  {
    "objectID": "publish/get-started.html#how-to-set-up-your-universe",
    "href": "publish/get-started.html#how-to-set-up-your-universe",
    "title": "Publish and advertise your packages",
    "section": "How to set up your universe",
    "text": "How to set up your universe\nCreating a universe for your R packages can be done in a few steps:\n\nCreate a git repository named (all lowercase) .r-universe.dev on your GitHub account, containing a packages.json file which lists the git repositories with R packages to include. For an organization at github.com/ropensci the repository is thus github.com/ropensci/ropensci.r-universe.dev; similarly for an user at github.com/jeroen the repository is github.com/jeroen/jeroen.r-universe.dev.\nInstall the r-universe app on this same GitHub account or organization for which you want to create the universe. Clicking on the app link will lead you to a page that asks “Where do you want to install R-universe?”.\nWait for your packages to start appearing on https://.r-universe.dev once they have finished building.\nDocument how to install packages from R-universe in the docs of your packages.\n\nA few more details on each step below.\n\nCreating your personal r-universe subdomain\nIn R-universe, every user has a private subdomain, where you control the content, and which does not interfere with other users. The subdomains are tied to the GitHub account or organization with that name.\n\nCase-sensitivity\nDomain names are by definition case-insensitive and lowercased.\n\n\nHow much GitHub is compulsory?\nHence, in order to start a universe you need a GitHub account. However the R packages themselves do not necessarily need to exist under that same account. They don’t even need to be on GitHub: they may be hosted on any public git server. If your R packages are hosted on another git service, such as Gitlab, or a university git server, you can simply use a GitHub account only for publishing a packages.json registry for that username, without having to buy into the full GitHub platform.\n\n\n\nPopulating the packages.json registry file\nIn order to publish content on r-universe, you need to create a registry file called packages.json, which lists the git urls containing the R packages you want to include in your universe. The file is formatted as a JSON array with required fields package and url for each entry, for example:\n[\n    {\n        \"package\": \"curl\",\n        \"url\": \"https://github.com/jeroen/curl\"\n    },\n    {\n        \"package\": \"pdftools\",\n        \"url\": \"https://github.com/ropensci/pdftools\"\n    },\n    {\n        \"package\": \"stringdist\",\n        \"url\": \"https://github.com/markvanderloo/stringdist\",\n        \"subdir\": \"pkg\"\n    }\n]\n\nSpecial case of CRAN packages\nWhen browsing the r-universe homepage you may notice that some major universes that contain many CRAN packages do not have a packages.json registry: When the r-universe app is installed on a GitHub account that does not have a proper packages.json file, the build system automatically starts adding all packages from CRAN which are owned by that particular GitHub account. Ownership is determined by the presence of a link to a GitHub repository in the URL or BugReports field of a CRAN package. Our scraper scans all CRAN packages for GitHub links on a daily basis and stores results in the cran-to-git database.\nThese are effectively auto-generated registries, on which the build system will fall back if the user does not have a personal registry. As soon as the user creates a proper universe registry repository with the packages.json file, this will take precedence, and the build system will automatically switch over.\n\n\nTracking custom branches or releases\nBy default, R-universe tracks and builds the default branch for each package git repository, for instance master or main. It is possible to customize which git branch or tag to track by adding a branch field to the registry.\nThe branch field can take the name of any git reference (either a branch or a tag). You can also set it to a special value \"*release\" which will automatically lookup the most recent GitHub release, using the same syntax as in remotes. For example:\n[\n  {\n    \"package\" : \"somepackage\",\n    \"url\" : \"https://github.com/jeroen/somepackage\",\n    \"branch\" : \"stable\"\n  }\n  {\n    \"package\": \"jose\",\n    \"url\": \"https://github.com/jeroen/jose\",\n    \"branch\" : \"*release\"\n  }\n]\nIf you want to use the default git branch, it is safest to omit the branch field. This way everything will keep working, even if the default branch gets another name at some point in the future.\n\n\n\nHand-written or programmatically created\nYou can either hand-write this packages.json file, or programmatically create it using the tools of your choice. For example you can generate it in R from a data frame using jsonlite:\ndf &lt;- data.frame(\n    package = c(\"curl\", \"pdftools\", \"stringdist\"),\n    url = c(\"https://github.com/jeroen/curl\", \"https://github.com/ropensci/pdftools\", \n        \"https://github.com/markvanderloo/stringdist\"),\n    subdir = c(NA, NA, \"pkg\")\n)\njsonlite::write_json(df, 'packages.json', pretty = TRUE)\nThe url value must be a public git url. This is important; our build servers literally call git clone ${url} on each of the entries. The package field must match the name of the R package from the DESCRIPTION file under that url. If the R package does not live in the root of the git repository, you also need to set the subdir field to the path of the R package root directory.\nWhen creating a new universe, start by adding no more than a few packages. You can easily add more packages later by updating your packages.json file.\nTo publish your registry, create a git repository called &lt;yourname&gt;.r-universe.dev on your GitHub account and push your packages.json file. See for example: https://github.com/maelle/maelle.r-universe.dev.\n\n\nInstalling the GitHub app\nOnce you pushed your packages.json file to your new universe repository on GitHub, the next step is to install the R-universe GitHub app on your account.\n\n\n\nghapp\n\n\n\n\nWaiting for the first build\nOnce you installed the app, the system will automatically create your personal monorepo under the r-universe organization: https://github.com/r-universe/&lt;yourname&gt;. This is where the system keeps the full history of your packages. The actions tap of your monorepo is also where the building happens.\n\n\n\nbuilds\n\n\nAfter a while (usually no more than one hour), packages and articles that have completed building on all platforms will start appearing on your dashboard, and directly become available for installation by users.\n\n\n\ndashboard\n\n\nThe GitHub app requires very limited permissions, it only requests permission to read and write commit statuses. This means that the R-universe build system can post a green checkmark on your package git commits, once your package is successfully built and deployed to R-universe. Thereby R-universe serves as a full CI-CD system that shows you if your package build and deploy was successful.\n\n\n\nsuccess\n\n\n\n\nAdding badges and user instructions\nOnce your packages have appeared on the dashboard, try installing them in R using the instructions from the dashboard page, for example:\n# Enable this universe\noptions(repos = c(\n    maelle = 'https://maelle.r-universe.dev',\n    CRAN = 'https://cloud.r-project.org'))\n\n# Install some packages\ninstall.packages('tinkr')\nTo help your users, you can consider copying these instructions to your package README.md files. And of course you can add an r-universe badge to your readme as well.\nThe badge API is simply /badges/&lt;package&gt; which will yield an SVG image that can directly be embedded into your markdown files, showing the deployed version for the given package:\n![r-universe](https://r-lib.r-universe.dev/badges/cpp11)\nFor example this would produce the following badge:",
    "crumbs": [
      "Publish and advertise your packages"
    ]
  }
]